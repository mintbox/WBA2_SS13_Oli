Aufgabe 3c

Arbeiten Sie die Kriterien heraus, die für die Entwicklung einer XML-Schema-Datei beachtet werden müssen. Die Schema-Datei soll die Struktur für eine XML-Datei definieren, in der mehrere unterschiedliche Rezepte gespeichert werden können.
Ziel ist es, dass das XML-Schema möglichst restriktiv ist, so dass in der XML-Datei möglichst semantisch sinnvolle Daten bezüglich der Rezepte gespeichert werden können.


Die Aufgabe von einem XML-Schema ist ein Regelwerk für ein legales XML Dokument zu schaffen.

Ein XML Schema definiert u.A.:
	- Elemente und Attribute die in einem Dokument vorkommen können
	- Welche Elemente sind Kindelemente, in welcher Reihenfolge stehen sie und wie viele gibt es?
	- Ob ein Element leer ist oder Text enthalten kann
	- Datentypen für Elemente und Attribute
	- Standard- und feste Werte für Elemente und Attribute (default)
	

Starten und enden muss das Schema mit dem selben Tag, auch Wurzelelement genannt.
Das Wurzelelement in diesem Fall ist "rezepte". Schon beim ersten Element "rezept"
ist die definierung von minOccurs und maxOccurs sinnvoll, da es kein Rezept geben muss, aber viele geben kann.
Der Standardwert ist hierbei immer für beide Werte auf 1 gesetzt, was in unserem Fall bedeuten würde das es nur genau ein Rezept geben kann (ziemlich sinnlos).

Hier kurz den Unterschied zwischen Simpletypes und Complextypes:
Simpletypes sind XML-Elemente die keine anderen Elemente oder Attribute beinhalten können. Des weiteren beinhalten sie nur
genau einen Typen, was die im XML Schema definierten sein können (boolean, string, etc.), aber auch selbst definierte.
In unserem Fall wären Beispiele für SimpleTypes:
	- Titel
	- Zubereitungsschritt
	- Brennwert
	- Zutat
	- Schwierigkeit

Complextypes können dagegen mehrere Elemente und/oder Attribute beinhalten. 
Ein komplexes Element kann demnach:
	- leer sein
	- andere Elemente beinhalten
	- Text beinhalten
	- Elemente und Text beinhalten

In unserem Fall wären Beispiele für ComplexTypes also:
	- Zubereitungsschritte
	- Zutaten

Das ganze Rezept inkl. Zutaten, Bild, Kommentaren, etc. kommt in eine sequence.
Wie im XML Dokument müssen den Elementen Datentypen zugewiesen werden. Folgende Datentypen werden definitiv benötigt:
	- Titel : string
	- Menge/Zutat : int
	- Einheit/Zutat : string
	- Name/Zutat : string
	- Arbeitszeit (Einheit) : string
	- Arbeitszeit (Dauer) : int
	- Schwierigkeitsgrad : string
	- Brennwert (Einheit) : string
	- Brennwert (Anzahl) : int
	- Zubereitungsschritt : string

Das Element "zutaten" hat diverse Elemente wie "portionen" mit dem Datentyp Integer, eine oder mehrere Zutaten (minOccurs & maxOccurs), Mengenangaben die optional sind, Einheitsangaben die optional sind, etc.
Das die Menge und Einheit optional sind schließe ich aus anderen Rezepten, wo diese Angaben fehlen.
Bei dem Element "einheit" kann man gut auf eine Restriktion abzielen, um durch eine Enumeration genau zu definieren welche Angaben erlaubt sind. Diese Restriktionen nennt man hier auch "facets".
Mögliche Restriktionen u.A.:
	- Zutat (Menge): 1-1000 (1000g = 1kg)
	- Zutat (Einheit): nur g oder auch kg, etc.
	- Arbeitszeit (Einheit): nur std, min...
	- Arbeitszeit: 1-60
	- Schwierigkeitsgrad: simpel, mittel, pfiffig
	- Brennwert (Einheit): nur kcal, kj

Die Zubereitungsschritte und die Kommentare können mehrfach vorkommen, bedeutet das ich hier wieder vor habe mit minOccurs und maxOccurs arbeiten werde.


EDIT:
Wie schon in Aufgabe 3a erwähnt ließen sich einzelne Rezepte auch in separate Dokumente speichern. In diesem Falle würde ein Link in XSD so aussehen:

<xs:element name=“link“>
	<xs:complexType>
		<xs:attribute name=“url“ type=“xs:string“/>
	</xs:complexType>
</xs:element>

und in XML könnte dies so aussehen:

<link url=“waffelrezept3.xml“/>